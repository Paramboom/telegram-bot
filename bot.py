import os
from flask import Flask, request
from telegram import Bot, Update
from telegram.ext import Application, ContextTypes, MessageHandler, filters

TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = -1001234567890  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–∞–Ω–∞–ª
RULES = "üìå –ü–†–ê–í–ò–õ–ê –ß–ê–¢–ê:\n1. –ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã\n2. –ù–µ —Å–ø–∞–º—å—Ç–µ\n3. –ù–µ —Ä–∞–∑–≥–ª–∞—à–∞–π—Ç–µ –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"

bot = Bot(TOKEN)
application = Application.builder().token(TOKEN).build()
app = Flask(__name__)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å—Ç–æ–≤ –∫–∞–Ω–∞–ª–∞
async def handle_channel_post(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.channel_post and update.channel_post.chat.id == CHANNEL_ID:
        await bot.send_message(
            chat_id=CHANNEL_ID,
            text=RULES,
            reply_to_message_id=update.channel_post.message_id
        )

application.add_handler(MessageHandler(filters.ChatType.CHANNEL, handle_channel_post))

# Webhook –¥–ª—è Render
@app.route("/", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    application.update_queue.put_nowait(update)
    return "ok"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
url = f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/"
bot.set_webhook(url)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
